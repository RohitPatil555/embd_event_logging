# --------------------------------------------------------------------
# CMakeLists.txt
# --------------------------------------------------------------------
cmake_minimum_required(VERSION 3.25)
project(EmbdEvtLog LANGUAGES CXX)

# ------------------------------------------------------------
# Global settings (C++20, sanitizers, coverage, compiler flags)
# ------------------------------------------------------------
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)   # useful for clangd / other tools
set(USER_CONFIG_FILE "" CACHE FILEPATH "Path to user configuration file")

# Enable address & undefined sanitizer on build type Debug
if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    set(SANITIZERS "-fsanitize=address,undefined" CACHE STRING "")
else()
    set(SANITIZERS "" CACHE STRING "")
endif()

add_compile_options(
    ${SANITIZERS}
    -Wall -Wextra -pedantic
)

# Code coverage (only on GCC/Clang)
if(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
    option(ENABLE_COVERAGE "Enable coverage flags" ON)
    if(ENABLE_COVERAGE AND CMAKE_BUILD_TYPE STREQUAL "Debug")
        add_compile_options(--coverage -O0)
        link_libraries(gcov)
    endif()
endif()

# ------------------------------------------------------------
# Project version – auto generated by `git describe` or a script
# ------------------------------------------------------------
include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/auto_version.cmake)

# ------------------------------------------------------------
# Generate project configuration using user provided configuration
# ------------------------------------------------------------
if(EXISTS "${USER_CONFIG_FILE}")
    message(STATUS "Reading configuration from ${USER_CONFIG_FILE}")
    include(${USER_CONFIG_FILE})
else()
    message(STATUS "Using default configuration")
    include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/user_config.cmake)
endif()

file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/genHdr)

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/include/config.hpp.in
        ${CMAKE_CURRENT_BINARY_DIR}/genHdr/config.hpp)

# ------------------------------------------------------------
# Sub‑projects
# ------------------------------------------------------------
add_subdirectory(lib)          # library
add_subdirectory(tests)        # unit tests
add_subdirectory(docs)         # MkDocs

# ------------------------------------------------------------
# Install rules (optional)
# ------------------------------------------------------------
#install(DIRECTORY include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
